{"config":{"indexing":"full","lang":["en"],"min_search_length":3,"prebuild_index":false,"separator":"[\\s\\-]+"},"docs":[{"location":"","text":"Welcome to MkDocs For full documentation visit mkdocs.org . Commands mkdocs new [dir-name] - Create a new project. mkdocs serve - Start the live-reloading docs server. mkdocs build - Build the documentation site. mkdocs -h - Print help message and exit. Project layout mkdocs.yml # The configuration file. docs/ index.md # The documentation homepage. ... # Other markdown pages, images and other files.","title":"Home"},{"location":"#welcome-to-mkdocs","text":"For full documentation visit mkdocs.org .","title":"Welcome to MkDocs"},{"location":"#commands","text":"mkdocs new [dir-name] - Create a new project. mkdocs serve - Start the live-reloading docs server. mkdocs build - Build the documentation site. mkdocs -h - Print help message and exit.","title":"Commands"},{"location":"#project-layout","text":"mkdocs.yml # The configuration file. docs/ index.md # The documentation homepage. ... # Other markdown pages, images and other files.","title":"Project layout"},{"location":"docker/","text":"Cheatsheet Docker Gestion des Images docker images Liste toutes les images Docker locales. docker pull <nom_image> T\u00e9l\u00e9charge une image depuis un registre Docker (ex : Docker Hub). docker build -t <nom_image>:<tag> <chemin_du_dockerfile> Construit une image Docker \u00e0 partir d'un Dockerfile. docker rmi <nom_image> Supprime une image locale. Gestion des Conteneurs docker ps Affiche les conteneurs en cours d'ex\u00e9cution. docker ps -a Affiche tous les conteneurs, y compris ceux qui sont arr\u00eat\u00e9s. docker run <nom_image> Ex\u00e9cute un nouveau conteneur \u00e0 partir d'une image. docker run -d <nom_image> Ex\u00e9cute un conteneur en arri\u00e8re-plan (mode d\u00e9tach\u00e9). docker run -it <nom_image> /bin/bash Ex\u00e9cute un conteneur en mode interactif avec un shell Bash. docker stop <nom_conteneur> Arr\u00eate un conteneur en cours d'ex\u00e9cution. docker start <nom_conteneur> D\u00e9marre un conteneur arr\u00eat\u00e9. docker restart <nom_conteneur> Red\u00e9marre un conteneur. docker rm <nom_conteneur> Supprime un conteneur arr\u00eat\u00e9. Gestion des R\u00e9seaux docker network ls Liste tous les r\u00e9seaux Docker. docker network create <nom_r\u00e9seau> Cr\u00e9e un nouveau r\u00e9seau Docker. docker network connect <nom_r\u00e9seau> <nom_conteneur> Connecte un conteneur \u00e0 un r\u00e9seau. docker network disconnect <nom_r\u00e9seau> <nom_conteneur> D\u00e9connecte un conteneur d'un r\u00e9seau. docker network rm <nom_r\u00e9seau> Supprime un r\u00e9seau Docker. Gestion des Volumes docker volume ls Liste tous les volumes Docker. docker volume create <nom_volume> Cr\u00e9e un nouveau volume Docker. docker volume rm <nom_volume> Supprime un volume Docker. docker run -v <nom_volume>:<chemin_dans_conteneur> <nom_image> Monte un volume dans un conteneur. Ex\u00e9cution et Logs docker exec -it <nom_conteneur> <commande> Ex\u00e9cute une commande dans un conteneur en cours d'ex\u00e9cution. docker logs <nom_conteneur> Affiche les logs d'un conteneur. docker logs -f <nom_conteneur> Affiche les logs d'un conteneur en temps r\u00e9el (mode suivi). Informations et Diagnostics docker inspect <nom_conteneur_ou_nom_image> Retourne des informations d\u00e9taill\u00e9es sur un conteneur ou une image. docker stats Affiche en temps r\u00e9el les statistiques d'utilisation des ressources pour tous les conteneurs. docker top <nom_conteneur> Affiche les processus en cours dans un conteneur. Docker Compose docker-compose up D\u00e9marre tous les services d\u00e9finis dans un fichier docker-compose.yml . docker-compose down Arr\u00eate et supprime les conteneurs, r\u00e9seaux, volumes, et images cr\u00e9\u00e9s par docker-compose up . docker-compose build Construit ou reconstruit les services. docker-compose ps Liste tous les conteneurs g\u00e9r\u00e9s par Docker Compose. Nettoyage docker system prune Supprime tous les conteneurs, r\u00e9seaux et images inutilis\u00e9s. docker volume prune Supprime tous les volumes non utilis\u00e9s. docker network prune Supprime tous les r\u00e9seaux non utilis\u00e9s. docker image prune Supprime les images non utilis\u00e9es. Sauvegarde et Restauration docker save -o <nom_fichier.tar> <nom_image> Sauvegarde une image Docker dans un fichier. docker load -i <nom_fichier.tar> Charge une image Docker \u00e0 partir d'un fichier. docker export -o <nom_fichier.tar> <nom_conteneur> Exporte le syst\u00e8me de fichiers d'un conteneur. docker import <nom_fichier.tar> <nom_image> Importe un syst\u00e8me de fichiers dans une nouvelle image Docker. Cette cheatsheet couvre les commandes Docker les plus couramment utilis\u00e9es pour la gestion des images, des conteneurs, des r\u00e9seaux, des volumes, et des t\u00e2ches de diagnostic. Utilisez-la comme r\u00e9f\u00e9rence rapide pour vos op\u00e9rations Docker quotidiennes.","title":"Cheatsheet Docker"},{"location":"docker/#cheatsheet-docker","text":"","title":"Cheatsheet Docker"},{"location":"docker/#gestion-des-images","text":"docker images Liste toutes les images Docker locales. docker pull <nom_image> T\u00e9l\u00e9charge une image depuis un registre Docker (ex : Docker Hub). docker build -t <nom_image>:<tag> <chemin_du_dockerfile> Construit une image Docker \u00e0 partir d'un Dockerfile. docker rmi <nom_image> Supprime une image locale.","title":"Gestion des Images"},{"location":"docker/#gestion-des-conteneurs","text":"docker ps Affiche les conteneurs en cours d'ex\u00e9cution. docker ps -a Affiche tous les conteneurs, y compris ceux qui sont arr\u00eat\u00e9s. docker run <nom_image> Ex\u00e9cute un nouveau conteneur \u00e0 partir d'une image. docker run -d <nom_image> Ex\u00e9cute un conteneur en arri\u00e8re-plan (mode d\u00e9tach\u00e9). docker run -it <nom_image> /bin/bash Ex\u00e9cute un conteneur en mode interactif avec un shell Bash. docker stop <nom_conteneur> Arr\u00eate un conteneur en cours d'ex\u00e9cution. docker start <nom_conteneur> D\u00e9marre un conteneur arr\u00eat\u00e9. docker restart <nom_conteneur> Red\u00e9marre un conteneur. docker rm <nom_conteneur> Supprime un conteneur arr\u00eat\u00e9.","title":"Gestion des Conteneurs"},{"location":"docker/#gestion-des-reseaux","text":"docker network ls Liste tous les r\u00e9seaux Docker. docker network create <nom_r\u00e9seau> Cr\u00e9e un nouveau r\u00e9seau Docker. docker network connect <nom_r\u00e9seau> <nom_conteneur> Connecte un conteneur \u00e0 un r\u00e9seau. docker network disconnect <nom_r\u00e9seau> <nom_conteneur> D\u00e9connecte un conteneur d'un r\u00e9seau. docker network rm <nom_r\u00e9seau> Supprime un r\u00e9seau Docker.","title":"Gestion des R\u00e9seaux"},{"location":"docker/#gestion-des-volumes","text":"docker volume ls Liste tous les volumes Docker. docker volume create <nom_volume> Cr\u00e9e un nouveau volume Docker. docker volume rm <nom_volume> Supprime un volume Docker. docker run -v <nom_volume>:<chemin_dans_conteneur> <nom_image> Monte un volume dans un conteneur.","title":"Gestion des Volumes"},{"location":"docker/#execution-et-logs","text":"docker exec -it <nom_conteneur> <commande> Ex\u00e9cute une commande dans un conteneur en cours d'ex\u00e9cution. docker logs <nom_conteneur> Affiche les logs d'un conteneur. docker logs -f <nom_conteneur> Affiche les logs d'un conteneur en temps r\u00e9el (mode suivi).","title":"Ex\u00e9cution et Logs"},{"location":"docker/#informations-et-diagnostics","text":"docker inspect <nom_conteneur_ou_nom_image> Retourne des informations d\u00e9taill\u00e9es sur un conteneur ou une image. docker stats Affiche en temps r\u00e9el les statistiques d'utilisation des ressources pour tous les conteneurs. docker top <nom_conteneur> Affiche les processus en cours dans un conteneur.","title":"Informations et Diagnostics"},{"location":"docker/#docker-compose","text":"docker-compose up D\u00e9marre tous les services d\u00e9finis dans un fichier docker-compose.yml . docker-compose down Arr\u00eate et supprime les conteneurs, r\u00e9seaux, volumes, et images cr\u00e9\u00e9s par docker-compose up . docker-compose build Construit ou reconstruit les services. docker-compose ps Liste tous les conteneurs g\u00e9r\u00e9s par Docker Compose.","title":"Docker Compose"},{"location":"docker/#nettoyage","text":"docker system prune Supprime tous les conteneurs, r\u00e9seaux et images inutilis\u00e9s. docker volume prune Supprime tous les volumes non utilis\u00e9s. docker network prune Supprime tous les r\u00e9seaux non utilis\u00e9s. docker image prune Supprime les images non utilis\u00e9es.","title":"Nettoyage"},{"location":"docker/#sauvegarde-et-restauration","text":"docker save -o <nom_fichier.tar> <nom_image> Sauvegarde une image Docker dans un fichier. docker load -i <nom_fichier.tar> Charge une image Docker \u00e0 partir d'un fichier. docker export -o <nom_fichier.tar> <nom_conteneur> Exporte le syst\u00e8me de fichiers d'un conteneur. docker import <nom_fichier.tar> <nom_image> Importe un syst\u00e8me de fichiers dans une nouvelle image Docker. Cette cheatsheet couvre les commandes Docker les plus couramment utilis\u00e9es pour la gestion des images, des conteneurs, des r\u00e9seaux, des volumes, et des t\u00e2ches de diagnostic. Utilisez-la comme r\u00e9f\u00e9rence rapide pour vos op\u00e9rations Docker quotidiennes.","title":"Sauvegarde et Restauration"},{"location":"javascript/","text":"","title":"JavaScript"},{"location":"python/","text":"","title":"Python"},{"location":"git/auth/","text":"Authentification Git pour GitHub Pour pousser du code vers un d\u00e9p\u00f4t distant sur GitHub, il faut s'authentifier. Voici les m\u00e9thodes les plus courantes : 1. Authentification avec HTTPS et un Token d'Acc\u00e8s Personnel G\u00e9n\u00e9rer un Token d'Acc\u00e8s Personnel : Connectez-vous \u00e0 GitHub. Allez dans Settings > Developer settings > Personal access tokens . Cliquez sur Tokens (classic) et Generate new token . S\u00e9lectionnez les permissions n\u00e9cessaires, comme repo . Utiliser le Token : Lors de l'utilisation de git push , entrez votre nom d'utilisateur GitHub. Utilisez le token comme mot de passe. Configurer Git pour M\u00e9moriser le Token : ```bash git config --global credential.helper cache","title":"Authentification Git pour GitHub"},{"location":"git/auth/#authentification-git-pour-github","text":"Pour pousser du code vers un d\u00e9p\u00f4t distant sur GitHub, il faut s'authentifier. Voici les m\u00e9thodes les plus courantes :","title":"Authentification Git pour GitHub"},{"location":"git/auth/#1-authentification-avec-https-et-un-token-dacces-personnel","text":"G\u00e9n\u00e9rer un Token d'Acc\u00e8s Personnel : Connectez-vous \u00e0 GitHub. Allez dans Settings > Developer settings > Personal access tokens . Cliquez sur Tokens (classic) et Generate new token . S\u00e9lectionnez les permissions n\u00e9cessaires, comme repo . Utiliser le Token : Lors de l'utilisation de git push , entrez votre nom d'utilisateur GitHub. Utilisez le token comme mot de passe. Configurer Git pour M\u00e9moriser le Token : ```bash git config --global credential.helper cache","title":"1. Authentification avec HTTPS et un Token d'Acc\u00e8s Personnel"},{"location":"git/git/","text":"Commandes Git les plus utiles Git est un syst\u00e8me de contr\u00f4le de version distribu\u00e9, utilis\u00e9 pour g\u00e9rer les versions de code source. Voici une liste des commandes Git les plus couramment utilis\u00e9es, avec des explications simples. Initialisation et Configuration git init Initialise un nouveau d\u00e9p\u00f4t Git local. git clone <url> Clone un d\u00e9p\u00f4t distant vers le r\u00e9pertoire local. git config --global user.name \"Votre Nom\" Configure le nom d'utilisateur global pour Git. git config --global user.email \"votre_email@example.com\" Configure l'adresse e-mail globale pour Git. Gestion des Modifications git status Affiche l'\u00e9tat actuel du d\u00e9p\u00f4t, y compris les modifications non suivies, suivies et les fichiers non suivis. git add <fichier> Ajoute un fichier sp\u00e9cifique \u00e0 l'index (staging area). git add . Ajoute tous les fichiers modifi\u00e9s \u00e0 l'index. git commit -m \"Message de commit\" Enregistre les modifications dans le d\u00e9p\u00f4t avec un message de commit. git commit -a -m \"Message de commit\" Ajoute et commite tous les fichiers modifi\u00e9s et suivis. Historique et Journal git log Affiche l'historique des commits. git log --oneline Affiche l'historique des commits dans un format compact. git diff Montre les diff\u00e9rences entre les modifications non commit\u00e9es et le dernier commit. git diff --staged Montre les diff\u00e9rences entre les fichiers index\u00e9s et le dernier commit. Branches git branch Liste toutes les branches locales. git branch <nom_branche> Cr\u00e9e une nouvelle branche. git checkout <nom_branche> Bascule vers une branche existante. git checkout -b <nom_branche> Cr\u00e9e et bascule vers une nouvelle branche. git merge <nom_branche> Fusionne la branche sp\u00e9cifi\u00e9e avec la branche actuelle. git branch -d <nom_branche> Supprime une branche. R\u00e9initialisation et Annulation git reset <fichier> Annule les modifications dans l'index pour un fichier. git reset --hard R\u00e9initialise l'index et l'arborescence de travail au dernier commit. git revert <commit> Annule un commit en cr\u00e9ant un nouveau commit. Remotes (D\u00e9p\u00f4ts Distants) git remote add origin <url> Ajoute un d\u00e9p\u00f4t distant nomm\u00e9 \"origin\". git remote -v Affiche les d\u00e9p\u00f4ts distants configur\u00e9s. git push origin <nom_branche> Envoie les commits de la branche locale vers le d\u00e9p\u00f4t distant. git pull origin <nom_branche> R\u00e9cup\u00e8re les modifications du d\u00e9p\u00f4t distant et les fusionne avec la branche locale. Tags git tag <nom_tag> Cr\u00e9e un tag pour marquer un point dans l'historique des commits. git push origin <nom_tag> Envoie un tag sp\u00e9cifique vers le d\u00e9p\u00f4t distant. Nettoyage git clean -f Supprime les fichiers non suivis dans le r\u00e9pertoire de travail. git gc Optimise la base de donn\u00e9es des objets Git pour \u00e9conomiser de l'espace. Autres Commandes Utiles git stash Sauvegarde les modifications actuelles sans les commiter. git stash apply Applique les modifications sauvegard\u00e9es pr\u00e9c\u00e9demment. git fetch R\u00e9cup\u00e8re les modifications du d\u00e9p\u00f4t distant sans les fusionner. git rebase <nom_branche> Applique les commits de la branche actuelle par-dessus une autre branche. Ces commandes Git couvrent les op\u00e9rations de base et avanc\u00e9es pour g\u00e9rer les versions de code. Utilisez cette cheatsheet comme r\u00e9f\u00e9rence rapide pour vos projets Git.","title":"Commandes Git les plus utiles"},{"location":"git/git/#commandes-git-les-plus-utiles","text":"Git est un syst\u00e8me de contr\u00f4le de version distribu\u00e9, utilis\u00e9 pour g\u00e9rer les versions de code source. Voici une liste des commandes Git les plus couramment utilis\u00e9es, avec des explications simples.","title":"Commandes Git les plus utiles"},{"location":"git/git/#initialisation-et-configuration","text":"git init Initialise un nouveau d\u00e9p\u00f4t Git local. git clone <url> Clone un d\u00e9p\u00f4t distant vers le r\u00e9pertoire local. git config --global user.name \"Votre Nom\" Configure le nom d'utilisateur global pour Git. git config --global user.email \"votre_email@example.com\" Configure l'adresse e-mail globale pour Git.","title":"Initialisation et Configuration"},{"location":"git/git/#gestion-des-modifications","text":"git status Affiche l'\u00e9tat actuel du d\u00e9p\u00f4t, y compris les modifications non suivies, suivies et les fichiers non suivis. git add <fichier> Ajoute un fichier sp\u00e9cifique \u00e0 l'index (staging area). git add . Ajoute tous les fichiers modifi\u00e9s \u00e0 l'index. git commit -m \"Message de commit\" Enregistre les modifications dans le d\u00e9p\u00f4t avec un message de commit. git commit -a -m \"Message de commit\" Ajoute et commite tous les fichiers modifi\u00e9s et suivis.","title":"Gestion des Modifications"},{"location":"git/git/#historique-et-journal","text":"git log Affiche l'historique des commits. git log --oneline Affiche l'historique des commits dans un format compact. git diff Montre les diff\u00e9rences entre les modifications non commit\u00e9es et le dernier commit. git diff --staged Montre les diff\u00e9rences entre les fichiers index\u00e9s et le dernier commit.","title":"Historique et Journal"},{"location":"git/git/#branches","text":"git branch Liste toutes les branches locales. git branch <nom_branche> Cr\u00e9e une nouvelle branche. git checkout <nom_branche> Bascule vers une branche existante. git checkout -b <nom_branche> Cr\u00e9e et bascule vers une nouvelle branche. git merge <nom_branche> Fusionne la branche sp\u00e9cifi\u00e9e avec la branche actuelle. git branch -d <nom_branche> Supprime une branche.","title":"Branches"},{"location":"git/git/#reinitialisation-et-annulation","text":"git reset <fichier> Annule les modifications dans l'index pour un fichier. git reset --hard R\u00e9initialise l'index et l'arborescence de travail au dernier commit. git revert <commit> Annule un commit en cr\u00e9ant un nouveau commit.","title":"R\u00e9initialisation et Annulation"},{"location":"git/git/#remotes-depots-distants","text":"git remote add origin <url> Ajoute un d\u00e9p\u00f4t distant nomm\u00e9 \"origin\". git remote -v Affiche les d\u00e9p\u00f4ts distants configur\u00e9s. git push origin <nom_branche> Envoie les commits de la branche locale vers le d\u00e9p\u00f4t distant. git pull origin <nom_branche> R\u00e9cup\u00e8re les modifications du d\u00e9p\u00f4t distant et les fusionne avec la branche locale.","title":"Remotes (D\u00e9p\u00f4ts Distants)"},{"location":"git/git/#tags","text":"git tag <nom_tag> Cr\u00e9e un tag pour marquer un point dans l'historique des commits. git push origin <nom_tag> Envoie un tag sp\u00e9cifique vers le d\u00e9p\u00f4t distant.","title":"Tags"},{"location":"git/git/#nettoyage","text":"git clean -f Supprime les fichiers non suivis dans le r\u00e9pertoire de travail. git gc Optimise la base de donn\u00e9es des objets Git pour \u00e9conomiser de l'espace.","title":"Nettoyage"},{"location":"git/git/#autres-commandes-utiles","text":"git stash Sauvegarde les modifications actuelles sans les commiter. git stash apply Applique les modifications sauvegard\u00e9es pr\u00e9c\u00e9demment. git fetch R\u00e9cup\u00e8re les modifications du d\u00e9p\u00f4t distant sans les fusionner. git rebase <nom_branche> Applique les commits de la branche actuelle par-dessus une autre branche. Ces commandes Git couvrent les op\u00e9rations de base et avanc\u00e9es pour g\u00e9rer les versions de code. Utilisez cette cheatsheet comme r\u00e9f\u00e9rence rapide pour vos projets Git.","title":"Autres Commandes Utiles"}]}