{"config":{"indexing":"full","lang":["en"],"min_search_length":3,"prebuild_index":false,"separator":"[\\s\\-]+"},"docs":[{"location":"","text":"Welcome to MkDocs For full documentation visit mkdocs.org . Commands mkdocs new [dir-name] - Create a new project. mkdocs serve - Start the live-reloading docs server. mkdocs build - Build the documentation site. mkdocs -h - Print help message and exit. Project layout mkdocs.yml # The configuration file. docs/ index.md # The documentation homepage. ... # Other markdown pages, images and other files.","title":"Home"},{"location":"#welcome-to-mkdocs","text":"For full documentation visit mkdocs.org .","title":"Welcome to MkDocs"},{"location":"#commands","text":"mkdocs new [dir-name] - Create a new project. mkdocs serve - Start the live-reloading docs server. mkdocs build - Build the documentation site. mkdocs -h - Print help message and exit.","title":"Commands"},{"location":"#project-layout","text":"mkdocs.yml # The configuration file. docs/ index.md # The documentation homepage. ... # Other markdown pages, images and other files.","title":"Project layout"},{"location":"docker/","text":"Cheatsheet Docker Gestion des Images docker images Liste toutes les images Docker locales. docker pull <nom_image> T\u00e9l\u00e9charge une image depuis un registre Docker (ex : Docker Hub). docker build -t <nom_image>:<tag> <chemin_du_dockerfile> Construit une image Docker \u00e0 partir d'un Dockerfile. docker rmi <nom_image> Supprime une image locale. Gestion des Conteneurs docker ps Affiche les conteneurs en cours d'ex\u00e9cution. docker ps -a Affiche tous les conteneurs, y compris ceux qui sont arr\u00eat\u00e9s. docker run <nom_image> Ex\u00e9cute un nouveau conteneur \u00e0 partir d'une image. docker run -d <nom_image> Ex\u00e9cute un conteneur en arri\u00e8re-plan (mode d\u00e9tach\u00e9). docker run -it <nom_image> /bin/bash Ex\u00e9cute un conteneur en mode interactif avec un shell Bash. docker stop <nom_conteneur> Arr\u00eate un conteneur en cours d'ex\u00e9cution. docker start <nom_conteneur> D\u00e9marre un conteneur arr\u00eat\u00e9. docker restart <nom_conteneur> Red\u00e9marre un conteneur. docker rm <nom_conteneur> Supprime un conteneur arr\u00eat\u00e9. Gestion des R\u00e9seaux docker network ls Liste tous les r\u00e9seaux Docker. docker network create <nom_r\u00e9seau> Cr\u00e9e un nouveau r\u00e9seau Docker. docker network connect <nom_r\u00e9seau> <nom_conteneur> Connecte un conteneur \u00e0 un r\u00e9seau. docker network disconnect <nom_r\u00e9seau> <nom_conteneur> D\u00e9connecte un conteneur d'un r\u00e9seau. docker network rm <nom_r\u00e9seau> Supprime un r\u00e9seau Docker. Gestion des Volumes docker volume ls Liste tous les volumes Docker. docker volume create <nom_volume> Cr\u00e9e un nouveau volume Docker. docker volume rm <nom_volume> Supprime un volume Docker. docker run -v <nom_volume>:<chemin_dans_conteneur> <nom_image> Monte un volume dans un conteneur. Ex\u00e9cution et Logs docker exec -it <nom_conteneur> <commande> Ex\u00e9cute une commande dans un conteneur en cours d'ex\u00e9cution. docker logs <nom_conteneur> Affiche les logs d'un conteneur. docker logs -f <nom_conteneur> Affiche les logs d'un conteneur en temps r\u00e9el (mode suivi). Informations et Diagnostics docker inspect <nom_conteneur_ou_nom_image> Retourne des informations d\u00e9taill\u00e9es sur un conteneur ou une image. docker stats Affiche en temps r\u00e9el les statistiques d'utilisation des ressources pour tous les conteneurs. docker top <nom_conteneur> Affiche les processus en cours dans un conteneur. Docker Compose docker-compose up D\u00e9marre tous les services d\u00e9finis dans un fichier docker-compose.yml . docker-compose down Arr\u00eate et supprime les conteneurs, r\u00e9seaux, volumes, et images cr\u00e9\u00e9s par docker-compose up . docker-compose build Construit ou reconstruit les services. docker-compose ps Liste tous les conteneurs g\u00e9r\u00e9s par Docker Compose. Nettoyage docker system prune Supprime tous les conteneurs, r\u00e9seaux et images inutilis\u00e9s. docker volume prune Supprime tous les volumes non utilis\u00e9s. docker network prune Supprime tous les r\u00e9seaux non utilis\u00e9s. docker image prune Supprime les images non utilis\u00e9es. Sauvegarde et Restauration docker save -o <nom_fichier.tar> <nom_image> Sauvegarde une image Docker dans un fichier. docker load -i <nom_fichier.tar> Charge une image Docker \u00e0 partir d'un fichier. docker export -o <nom_fichier.tar> <nom_conteneur> Exporte le syst\u00e8me de fichiers d'un conteneur. docker import <nom_fichier.tar> <nom_image> Importe un syst\u00e8me de fichiers dans une nouvelle image Docker. Astuces Supprimer tous les containers sauf un en particulier docker ps -aq | grep -v $(docker ps -aqf \"name=my_container\") | xargs docker rm Cette cheatsheet couvre les commandes Docker les plus couramment utilis\u00e9es pour la gestion des images, des conteneurs, des r\u00e9seaux, des volumes, et des t\u00e2ches de diagnostic. Utilisez-la comme r\u00e9f\u00e9rence rapide pour vos op\u00e9rations Docker quotidiennes.","title":"Docker"},{"location":"docker/#cheatsheet-docker","text":"","title":"Cheatsheet Docker"},{"location":"docker/#gestion-des-images","text":"docker images Liste toutes les images Docker locales. docker pull <nom_image> T\u00e9l\u00e9charge une image depuis un registre Docker (ex : Docker Hub). docker build -t <nom_image>:<tag> <chemin_du_dockerfile> Construit une image Docker \u00e0 partir d'un Dockerfile. docker rmi <nom_image> Supprime une image locale.","title":"Gestion des Images"},{"location":"docker/#gestion-des-conteneurs","text":"docker ps Affiche les conteneurs en cours d'ex\u00e9cution. docker ps -a Affiche tous les conteneurs, y compris ceux qui sont arr\u00eat\u00e9s. docker run <nom_image> Ex\u00e9cute un nouveau conteneur \u00e0 partir d'une image. docker run -d <nom_image> Ex\u00e9cute un conteneur en arri\u00e8re-plan (mode d\u00e9tach\u00e9). docker run -it <nom_image> /bin/bash Ex\u00e9cute un conteneur en mode interactif avec un shell Bash. docker stop <nom_conteneur> Arr\u00eate un conteneur en cours d'ex\u00e9cution. docker start <nom_conteneur> D\u00e9marre un conteneur arr\u00eat\u00e9. docker restart <nom_conteneur> Red\u00e9marre un conteneur. docker rm <nom_conteneur> Supprime un conteneur arr\u00eat\u00e9.","title":"Gestion des Conteneurs"},{"location":"docker/#gestion-des-reseaux","text":"docker network ls Liste tous les r\u00e9seaux Docker. docker network create <nom_r\u00e9seau> Cr\u00e9e un nouveau r\u00e9seau Docker. docker network connect <nom_r\u00e9seau> <nom_conteneur> Connecte un conteneur \u00e0 un r\u00e9seau. docker network disconnect <nom_r\u00e9seau> <nom_conteneur> D\u00e9connecte un conteneur d'un r\u00e9seau. docker network rm <nom_r\u00e9seau> Supprime un r\u00e9seau Docker.","title":"Gestion des R\u00e9seaux"},{"location":"docker/#gestion-des-volumes","text":"docker volume ls Liste tous les volumes Docker. docker volume create <nom_volume> Cr\u00e9e un nouveau volume Docker. docker volume rm <nom_volume> Supprime un volume Docker. docker run -v <nom_volume>:<chemin_dans_conteneur> <nom_image> Monte un volume dans un conteneur.","title":"Gestion des Volumes"},{"location":"docker/#execution-et-logs","text":"docker exec -it <nom_conteneur> <commande> Ex\u00e9cute une commande dans un conteneur en cours d'ex\u00e9cution. docker logs <nom_conteneur> Affiche les logs d'un conteneur. docker logs -f <nom_conteneur> Affiche les logs d'un conteneur en temps r\u00e9el (mode suivi).","title":"Ex\u00e9cution et Logs"},{"location":"docker/#informations-et-diagnostics","text":"docker inspect <nom_conteneur_ou_nom_image> Retourne des informations d\u00e9taill\u00e9es sur un conteneur ou une image. docker stats Affiche en temps r\u00e9el les statistiques d'utilisation des ressources pour tous les conteneurs. docker top <nom_conteneur> Affiche les processus en cours dans un conteneur.","title":"Informations et Diagnostics"},{"location":"docker/#docker-compose","text":"docker-compose up D\u00e9marre tous les services d\u00e9finis dans un fichier docker-compose.yml . docker-compose down Arr\u00eate et supprime les conteneurs, r\u00e9seaux, volumes, et images cr\u00e9\u00e9s par docker-compose up . docker-compose build Construit ou reconstruit les services. docker-compose ps Liste tous les conteneurs g\u00e9r\u00e9s par Docker Compose.","title":"Docker Compose"},{"location":"docker/#nettoyage","text":"docker system prune Supprime tous les conteneurs, r\u00e9seaux et images inutilis\u00e9s. docker volume prune Supprime tous les volumes non utilis\u00e9s. docker network prune Supprime tous les r\u00e9seaux non utilis\u00e9s. docker image prune Supprime les images non utilis\u00e9es.","title":"Nettoyage"},{"location":"docker/#sauvegarde-et-restauration","text":"docker save -o <nom_fichier.tar> <nom_image> Sauvegarde une image Docker dans un fichier. docker load -i <nom_fichier.tar> Charge une image Docker \u00e0 partir d'un fichier. docker export -o <nom_fichier.tar> <nom_conteneur> Exporte le syst\u00e8me de fichiers d'un conteneur. docker import <nom_fichier.tar> <nom_image> Importe un syst\u00e8me de fichiers dans une nouvelle image Docker.","title":"Sauvegarde et Restauration"},{"location":"docker/#astuces","text":"Supprimer tous les containers sauf un en particulier docker ps -aq | grep -v $(docker ps -aqf \"name=my_container\") | xargs docker rm Cette cheatsheet couvre les commandes Docker les plus couramment utilis\u00e9es pour la gestion des images, des conteneurs, des r\u00e9seaux, des volumes, et des t\u00e2ches de diagnostic. Utilisez-la comme r\u00e9f\u00e9rence rapide pour vos op\u00e9rations Docker quotidiennes.","title":"Astuces"},{"location":"python/","text":"Cheat Sheet des Fonctions Utiles en Python Types de Donn\u00e9es de Base Nombres # Op\u00e9rations sur les entiers et les flottants a = 10 b = 5.5 somme = a + b # Addition difference = a - b # Soustraction produit = a * b # Multiplication quotient = a / b # Division Cha\u00eenes de caract\u00e8res # Op\u00e9rations sur les cha\u00eenes de caract\u00e8res s = \"Bonjour, Monde!\" s_majuscule = s.upper() # Convertir en majuscules s_minuscule = s.lower() # Convertir en minuscules s_split = s.split(',') # Diviser la cha\u00eene en liste s_replace = s.replace('Monde', 'Python') # Remplacer une sous-cha\u00eene Collections Listes # Op\u00e9rations sur les listes ma_liste = [1, 2, 3, 4, 5] ma_liste.append(6) # Ajouter un \u00e9l\u00e9ment ma_liste.remove(3) # Supprimer un \u00e9l\u00e9ment ma_liste.sort() # Trier la liste ma_liste.reverse() # Inverser la liste Dictionnaires # Op\u00e9rations sur les dictionnaires mon_dict = {'nom': 'Jean', '\u00e2ge': 30} nom = mon_dict.get('nom') # Obtenir la valeur par cl\u00e9 mon_dict['\u00e2ge'] = 31 # Modifier une valeur cles = mon_dict.keys() # Obtenir toutes les cl\u00e9s valeurs = mon_dict.values() # Obtenir toutes les valeurs Fonctions Utiles Fonctions de Base print(\"Bonjour\") # Afficher du texte len(ma_liste) # Obtenir la longueur d'une liste ou cha\u00eene type(a) # Obtenir le type d'une variable Manipulation de Fichiers # Lire un fichier with open('fichier.txt', 'r') as f: contenu = f.read() # \u00c9crire dans un fichier with open('fichier.txt', 'w') as f: f.write(\"Bonjour, Monde!\") Fonctions de Boucles # Boucle for for i in range(5): print(i) # Boucle while compteur = 0 while compteur < 5: print(compteur) compteur += 1 Compr\u00e9hensions de Listes # Cr\u00e9er une nouvelle liste avec des carr\u00e9s des nombres carr\u00e9s = [x**2 for x in range(10)] Gestion des Exceptions try: result = 10 / 0 except ZeroDivisionError: print(\"Division par z\u00e9ro non autoris\u00e9e!\") finally: print(\"Op\u00e9ration termin\u00e9e.\")","title":"Python"},{"location":"python/#cheat-sheet-des-fonctions-utiles-en-python","text":"","title":"Cheat Sheet des Fonctions Utiles en Python"},{"location":"python/#types-de-donnees-de-base","text":"","title":"Types de Donn\u00e9es de Base"},{"location":"python/#nombres","text":"# Op\u00e9rations sur les entiers et les flottants a = 10 b = 5.5 somme = a + b # Addition difference = a - b # Soustraction produit = a * b # Multiplication quotient = a / b # Division","title":"Nombres"},{"location":"python/#chaines-de-caracteres","text":"# Op\u00e9rations sur les cha\u00eenes de caract\u00e8res s = \"Bonjour, Monde!\" s_majuscule = s.upper() # Convertir en majuscules s_minuscule = s.lower() # Convertir en minuscules s_split = s.split(',') # Diviser la cha\u00eene en liste s_replace = s.replace('Monde', 'Python') # Remplacer une sous-cha\u00eene","title":"Cha\u00eenes de caract\u00e8res"},{"location":"python/#collections","text":"","title":"Collections"},{"location":"python/#listes","text":"# Op\u00e9rations sur les listes ma_liste = [1, 2, 3, 4, 5] ma_liste.append(6) # Ajouter un \u00e9l\u00e9ment ma_liste.remove(3) # Supprimer un \u00e9l\u00e9ment ma_liste.sort() # Trier la liste ma_liste.reverse() # Inverser la liste","title":"Listes"},{"location":"python/#dictionnaires","text":"# Op\u00e9rations sur les dictionnaires mon_dict = {'nom': 'Jean', '\u00e2ge': 30} nom = mon_dict.get('nom') # Obtenir la valeur par cl\u00e9 mon_dict['\u00e2ge'] = 31 # Modifier une valeur cles = mon_dict.keys() # Obtenir toutes les cl\u00e9s valeurs = mon_dict.values() # Obtenir toutes les valeurs","title":"Dictionnaires"},{"location":"python/#fonctions-utiles","text":"","title":"Fonctions Utiles"},{"location":"python/#fonctions-de-base","text":"print(\"Bonjour\") # Afficher du texte len(ma_liste) # Obtenir la longueur d'une liste ou cha\u00eene type(a) # Obtenir le type d'une variable","title":"Fonctions de Base"},{"location":"python/#manipulation-de-fichiers","text":"# Lire un fichier with open('fichier.txt', 'r') as f: contenu = f.read() # \u00c9crire dans un fichier with open('fichier.txt', 'w') as f: f.write(\"Bonjour, Monde!\")","title":"Manipulation de Fichiers"},{"location":"python/#fonctions-de-boucles","text":"# Boucle for for i in range(5): print(i) # Boucle while compteur = 0 while compteur < 5: print(compteur) compteur += 1","title":"Fonctions de Boucles"},{"location":"python/#comprehensions-de-listes","text":"# Cr\u00e9er une nouvelle liste avec des carr\u00e9s des nombres carr\u00e9s = [x**2 for x in range(10)]","title":"Compr\u00e9hensions de Listes"},{"location":"python/#gestion-des-exceptions","text":"try: result = 10 / 0 except ZeroDivisionError: print(\"Division par z\u00e9ro non autoris\u00e9e!\") finally: print(\"Op\u00e9ration termin\u00e9e.\")","title":"Gestion des Exceptions"},{"location":"dotnet/razor/","text":"Cheat Sheet Razor .NET Core Introduction Razor est un moteur de template de syntaxe qui permet de combiner du code C# avec du HTML de mani\u00e8re propre et lisible. Il est largement utilis\u00e9 dans les applications ASP.NET Core pour la cr\u00e9ation de vues dynamiques. Syntaxe de Base Code C# dans Razor @{ var message = \"Bonjour, Monde!\"; } <p>@message</p> Expressions C# Inline <p>Le r\u00e9sultat est: @(\"Hello, \" + \"World!\")</p> Commentaires Razor @* Ceci est un commentaire Razor *@ Directives Importantes @using MonProjet.Models // Importer un espace de nom @model MonProjet.Models.MonModele // Sp\u00e9cifier le mod\u00e8le de vue @inject MonService myService // Injection de service @inherits MaClasseDeBase // Inh\u00e9rer d'une classe de base @functions { // Ajouter des fonctions C# custom } Boucles et Conditions Conditionnelle if @if (Model.IsLoggedIn) { <p>Bienvenue, @Model.UserName!</p> } else { <p>Veuillez vous connecter.</p> } Boucle for @for (int i = 0; i < 10; i++) { <p>Num\u00e9ro: @i</p> } Boucle foreach @foreach (var item in Model.Items) { <p>@item.Name</p> } Liens et Actions G\u00e9n\u00e9rer un lien d'action <a asp-controller=\"Home\" asp-action=\"Index\">Accueil</a> Lien avec param\u00e8tres <a asp-controller=\"Produit\" asp-action=\"D\u00e9tails\" asp-route-id=\"@item.Id\" >Voir D\u00e9tails</a > Affichage Conditionnel et Boucles Boucle while @{ int i = 0; while (i < 5) { <p>Compteur: @i</p> i++; } } Condition switch @switch (Model.TypeUtilisateur) { case \"Admin\": <p>Vous avez les privil\u00e8ges d'administrateur.</p> break; case \"Utilisateur\": <p>Bienvenue, utilisateur.</p> break; default: <p>Type utilisateur inconnu.</p> break; } Helpers HTML Label et Input @Html.LabelFor(model => model.Nom) @Html.TextBoxFor(model => model.Nom) Checkbox et Radio Button @Html.CheckBoxFor(model => model.EstActif) @Html.RadioButtonFor(model => model.Genre, \"Homme\") @Html.RadioButtonFor(model => model.Genre, \"Femme\") DropdownList @Html.DropDownListFor(model => model.Cat\u00e9gorieId, new SelectList(Model.Cat\u00e9gories, \"Id\", \"Nom\")) Validation et Messages d'Erreur Afficher les erreurs de validation @Html.ValidationSummary(true) @Html.ValidationMessageFor(model => model.Nom) Partials et Layouts Utiliser un Layout @{ Layout = \"_Layout.cshtml\"; } Rendu d'une vue partielle @Html.Partial(\"_PartialView\", Model.PartieDeLaVue) Sections et Rendu @section Scripts { <script src=\"monScript.js\"></script> } Inclusion de fichiers JS et CSS @section Styles { <link rel=\"stylesheet\" href=\"~/css/site.css\" /> }","title":"Razor"},{"location":"dotnet/razor/#cheat-sheet-razor-net-core","text":"","title":"Cheat Sheet Razor .NET Core"},{"location":"dotnet/razor/#introduction","text":"Razor est un moteur de template de syntaxe qui permet de combiner du code C# avec du HTML de mani\u00e8re propre et lisible. Il est largement utilis\u00e9 dans les applications ASP.NET Core pour la cr\u00e9ation de vues dynamiques.","title":"Introduction"},{"location":"dotnet/razor/#syntaxe-de-base","text":"","title":"Syntaxe de Base"},{"location":"dotnet/razor/#code-c-dans-razor","text":"@{ var message = \"Bonjour, Monde!\"; } <p>@message</p>","title":"Code C# dans Razor"},{"location":"dotnet/razor/#expressions-c-inline","text":"<p>Le r\u00e9sultat est: @(\"Hello, \" + \"World!\")</p>","title":"Expressions C# Inline"},{"location":"dotnet/razor/#commentaires-razor","text":"@* Ceci est un commentaire Razor *@","title":"Commentaires Razor"},{"location":"dotnet/razor/#directives-importantes","text":"@using MonProjet.Models // Importer un espace de nom @model MonProjet.Models.MonModele // Sp\u00e9cifier le mod\u00e8le de vue @inject MonService myService // Injection de service @inherits MaClasseDeBase // Inh\u00e9rer d'une classe de base @functions { // Ajouter des fonctions C# custom }","title":"Directives Importantes"},{"location":"dotnet/razor/#boucles-et-conditions","text":"","title":"Boucles et Conditions"},{"location":"dotnet/razor/#conditionnelle-if","text":"@if (Model.IsLoggedIn) { <p>Bienvenue, @Model.UserName!</p> } else { <p>Veuillez vous connecter.</p> }","title":"Conditionnelle if"},{"location":"dotnet/razor/#boucle-for","text":"@for (int i = 0; i < 10; i++) { <p>Num\u00e9ro: @i</p> }","title":"Boucle for"},{"location":"dotnet/razor/#boucle-foreach","text":"@foreach (var item in Model.Items) { <p>@item.Name</p> }","title":"Boucle foreach"},{"location":"dotnet/razor/#liens-et-actions","text":"","title":"Liens et Actions"},{"location":"dotnet/razor/#generer-un-lien-daction","text":"<a asp-controller=\"Home\" asp-action=\"Index\">Accueil</a>","title":"G\u00e9n\u00e9rer un lien d'action"},{"location":"dotnet/razor/#lien-avec-parametres","text":"<a asp-controller=\"Produit\" asp-action=\"D\u00e9tails\" asp-route-id=\"@item.Id\" >Voir D\u00e9tails</a >","title":"Lien avec param\u00e8tres"},{"location":"dotnet/razor/#affichage-conditionnel-et-boucles","text":"","title":"Affichage Conditionnel et Boucles"},{"location":"dotnet/razor/#boucle-while","text":"@{ int i = 0; while (i < 5) { <p>Compteur: @i</p> i++; } }","title":"Boucle while"},{"location":"dotnet/razor/#condition-switch","text":"@switch (Model.TypeUtilisateur) { case \"Admin\": <p>Vous avez les privil\u00e8ges d'administrateur.</p> break; case \"Utilisateur\": <p>Bienvenue, utilisateur.</p> break; default: <p>Type utilisateur inconnu.</p> break; }","title":"Condition switch"},{"location":"dotnet/razor/#helpers-html","text":"","title":"Helpers HTML"},{"location":"dotnet/razor/#label-et-input","text":"@Html.LabelFor(model => model.Nom) @Html.TextBoxFor(model => model.Nom)","title":"Label et Input"},{"location":"dotnet/razor/#checkbox-et-radio-button","text":"@Html.CheckBoxFor(model => model.EstActif) @Html.RadioButtonFor(model => model.Genre, \"Homme\") @Html.RadioButtonFor(model => model.Genre, \"Femme\")","title":"Checkbox et Radio Button"},{"location":"dotnet/razor/#dropdownlist","text":"@Html.DropDownListFor(model => model.Cat\u00e9gorieId, new SelectList(Model.Cat\u00e9gories, \"Id\", \"Nom\"))","title":"DropdownList"},{"location":"dotnet/razor/#validation-et-messages-derreur","text":"","title":"Validation et Messages d'Erreur"},{"location":"dotnet/razor/#afficher-les-erreurs-de-validation","text":"@Html.ValidationSummary(true) @Html.ValidationMessageFor(model => model.Nom)","title":"Afficher les erreurs de validation"},{"location":"dotnet/razor/#partials-et-layouts","text":"","title":"Partials et Layouts"},{"location":"dotnet/razor/#utiliser-un-layout","text":"@{ Layout = \"_Layout.cshtml\"; }","title":"Utiliser un Layout"},{"location":"dotnet/razor/#rendu-dune-vue-partielle","text":"@Html.Partial(\"_PartialView\", Model.PartieDeLaVue)","title":"Rendu d'une vue partielle"},{"location":"dotnet/razor/#sections-et-rendu","text":"@section Scripts { <script src=\"monScript.js\"></script> }","title":"Sections et Rendu"},{"location":"dotnet/razor/#inclusion-de-fichiers-js-et-css","text":"@section Styles { <link rel=\"stylesheet\" href=\"~/css/site.css\" /> }","title":"Inclusion de fichiers JS et CSS"},{"location":"git/auth/","text":"Authentification Git pour GitHub Pour pousser du code vers un d\u00e9p\u00f4t distant sur GitHub, il faut s'authentifier. Voici les m\u00e9thodes les plus courantes : 1. Authentification avec HTTPS et un Token d'Acc\u00e8s Personnel G\u00e9n\u00e9rer un Token d'Acc\u00e8s Personnel : Connectez-vous \u00e0 GitHub. Allez dans Settings > Developer settings > Personal access tokens . Cliquez sur Tokens (classic) et Generate new token . S\u00e9lectionnez les permissions n\u00e9cessaires, comme repo . Utiliser le Token : Lors de l'utilisation de git push , entrez votre nom d'utilisateur GitHub. Utilisez le token comme mot de passe. Configurer Git pour M\u00e9moriser le Token : bash git config --global credential.helper cache","title":"Authentification Git"},{"location":"git/auth/#authentification-git-pour-github","text":"Pour pousser du code vers un d\u00e9p\u00f4t distant sur GitHub, il faut s'authentifier. Voici les m\u00e9thodes les plus courantes :","title":"Authentification Git pour GitHub"},{"location":"git/auth/#1-authentification-avec-https-et-un-token-dacces-personnel","text":"G\u00e9n\u00e9rer un Token d'Acc\u00e8s Personnel : Connectez-vous \u00e0 GitHub. Allez dans Settings > Developer settings > Personal access tokens . Cliquez sur Tokens (classic) et Generate new token . S\u00e9lectionnez les permissions n\u00e9cessaires, comme repo . Utiliser le Token : Lors de l'utilisation de git push , entrez votre nom d'utilisateur GitHub. Utilisez le token comme mot de passe. Configurer Git pour M\u00e9moriser le Token : bash git config --global credential.helper cache","title":"1. Authentification avec HTTPS et un Token d'Acc\u00e8s Personnel"},{"location":"git/git/","text":"Commandes Git les plus utiles Git est un syst\u00e8me de contr\u00f4le de version distribu\u00e9, utilis\u00e9 pour g\u00e9rer les versions de code source. Voici une liste des commandes Git les plus couramment utilis\u00e9es, avec des explications simples. Initialisation et Configuration git init Initialise un nouveau d\u00e9p\u00f4t Git local. git clone <url> Clone un d\u00e9p\u00f4t distant vers le r\u00e9pertoire local. git config --global user.name \"Votre Nom\" Configure le nom d'utilisateur global pour Git. git config --global user.email \"votre_email@example.com\" Configure l'adresse e-mail globale pour Git. Gestion des Modifications git status Affiche l'\u00e9tat actuel du d\u00e9p\u00f4t, y compris les modifications non suivies, suivies et les fichiers non suivis. git add <fichier> Ajoute un fichier sp\u00e9cifique \u00e0 l'index (staging area). git add . Ajoute tous les fichiers modifi\u00e9s \u00e0 l'index. git commit -m \"Message de commit\" Enregistre les modifications dans le d\u00e9p\u00f4t avec un message de commit. git commit -a -m \"Message de commit\" Ajoute et commite tous les fichiers modifi\u00e9s et suivis. Historique et Journal git log Affiche l'historique des commits. git log --oneline Affiche l'historique des commits dans un format compact. git diff Montre les diff\u00e9rences entre les modifications non commit\u00e9es et le dernier commit. git diff --staged Montre les diff\u00e9rences entre les fichiers index\u00e9s et le dernier commit. Branches git branch Liste toutes les branches locales. git branch <nom_branche> Cr\u00e9e une nouvelle branche. git checkout <nom_branche> Bascule vers une branche existante. git checkout -b <nom_branche> Cr\u00e9e et bascule vers une nouvelle branche. git merge <nom_branche> Fusionne la branche sp\u00e9cifi\u00e9e avec la branche actuelle. git branch -d <nom_branche> Supprime une branche. R\u00e9initialisation et Annulation git reset <fichier> Annule les modifications dans l'index pour un fichier. git reset --hard R\u00e9initialise l'index et l'arborescence de travail au dernier commit. git revert <commit> Annule un commit en cr\u00e9ant un nouveau commit. Remotes (D\u00e9p\u00f4ts Distants) git remote add origin <url> Ajoute un d\u00e9p\u00f4t distant nomm\u00e9 \"origin\". git remote -v Affiche les d\u00e9p\u00f4ts distants configur\u00e9s. git push origin <nom_branche> Envoie les commits de la branche locale vers le d\u00e9p\u00f4t distant. git pull origin <nom_branche> R\u00e9cup\u00e8re les modifications du d\u00e9p\u00f4t distant et les fusionne avec la branche locale. Tags git tag <nom_tag> Cr\u00e9e un tag pour marquer un point dans l'historique des commits. git push origin <nom_tag> Envoie un tag sp\u00e9cifique vers le d\u00e9p\u00f4t distant. Nettoyage git clean -f Supprime les fichiers non suivis dans le r\u00e9pertoire de travail. git gc Optimise la base de donn\u00e9es des objets Git pour \u00e9conomiser de l'espace. Autres Commandes Utiles git stash Sauvegarde les modifications actuelles sans les commiter. git stash apply Applique les modifications sauvegard\u00e9es pr\u00e9c\u00e9demment. git fetch R\u00e9cup\u00e8re les modifications du d\u00e9p\u00f4t distant sans les fusionner. git rebase <nom_branche> Applique les commits de la branche actuelle par-dessus une autre branche. Ces commandes Git couvrent les op\u00e9rations de base et avanc\u00e9es pour g\u00e9rer les versions de code. Utilisez cette cheatsheet comme r\u00e9f\u00e9rence rapide pour vos projets Git.","title":"CheatSheet"},{"location":"git/git/#commandes-git-les-plus-utiles","text":"Git est un syst\u00e8me de contr\u00f4le de version distribu\u00e9, utilis\u00e9 pour g\u00e9rer les versions de code source. Voici une liste des commandes Git les plus couramment utilis\u00e9es, avec des explications simples.","title":"Commandes Git les plus utiles"},{"location":"git/git/#initialisation-et-configuration","text":"git init Initialise un nouveau d\u00e9p\u00f4t Git local. git clone <url> Clone un d\u00e9p\u00f4t distant vers le r\u00e9pertoire local. git config --global user.name \"Votre Nom\" Configure le nom d'utilisateur global pour Git. git config --global user.email \"votre_email@example.com\" Configure l'adresse e-mail globale pour Git.","title":"Initialisation et Configuration"},{"location":"git/git/#gestion-des-modifications","text":"git status Affiche l'\u00e9tat actuel du d\u00e9p\u00f4t, y compris les modifications non suivies, suivies et les fichiers non suivis. git add <fichier> Ajoute un fichier sp\u00e9cifique \u00e0 l'index (staging area). git add . Ajoute tous les fichiers modifi\u00e9s \u00e0 l'index. git commit -m \"Message de commit\" Enregistre les modifications dans le d\u00e9p\u00f4t avec un message de commit. git commit -a -m \"Message de commit\" Ajoute et commite tous les fichiers modifi\u00e9s et suivis.","title":"Gestion des Modifications"},{"location":"git/git/#historique-et-journal","text":"git log Affiche l'historique des commits. git log --oneline Affiche l'historique des commits dans un format compact. git diff Montre les diff\u00e9rences entre les modifications non commit\u00e9es et le dernier commit. git diff --staged Montre les diff\u00e9rences entre les fichiers index\u00e9s et le dernier commit.","title":"Historique et Journal"},{"location":"git/git/#branches","text":"git branch Liste toutes les branches locales. git branch <nom_branche> Cr\u00e9e une nouvelle branche. git checkout <nom_branche> Bascule vers une branche existante. git checkout -b <nom_branche> Cr\u00e9e et bascule vers une nouvelle branche. git merge <nom_branche> Fusionne la branche sp\u00e9cifi\u00e9e avec la branche actuelle. git branch -d <nom_branche> Supprime une branche.","title":"Branches"},{"location":"git/git/#reinitialisation-et-annulation","text":"git reset <fichier> Annule les modifications dans l'index pour un fichier. git reset --hard R\u00e9initialise l'index et l'arborescence de travail au dernier commit. git revert <commit> Annule un commit en cr\u00e9ant un nouveau commit.","title":"R\u00e9initialisation et Annulation"},{"location":"git/git/#remotes-depots-distants","text":"git remote add origin <url> Ajoute un d\u00e9p\u00f4t distant nomm\u00e9 \"origin\". git remote -v Affiche les d\u00e9p\u00f4ts distants configur\u00e9s. git push origin <nom_branche> Envoie les commits de la branche locale vers le d\u00e9p\u00f4t distant. git pull origin <nom_branche> R\u00e9cup\u00e8re les modifications du d\u00e9p\u00f4t distant et les fusionne avec la branche locale.","title":"Remotes (D\u00e9p\u00f4ts Distants)"},{"location":"git/git/#tags","text":"git tag <nom_tag> Cr\u00e9e un tag pour marquer un point dans l'historique des commits. git push origin <nom_tag> Envoie un tag sp\u00e9cifique vers le d\u00e9p\u00f4t distant.","title":"Tags"},{"location":"git/git/#nettoyage","text":"git clean -f Supprime les fichiers non suivis dans le r\u00e9pertoire de travail. git gc Optimise la base de donn\u00e9es des objets Git pour \u00e9conomiser de l'espace.","title":"Nettoyage"},{"location":"git/git/#autres-commandes-utiles","text":"git stash Sauvegarde les modifications actuelles sans les commiter. git stash apply Applique les modifications sauvegard\u00e9es pr\u00e9c\u00e9demment. git fetch R\u00e9cup\u00e8re les modifications du d\u00e9p\u00f4t distant sans les fusionner. git rebase <nom_branche> Applique les commits de la branche actuelle par-dessus une autre branche. Ces commandes Git couvrent les op\u00e9rations de base et avanc\u00e9es pour g\u00e9rer les versions de code. Utilisez cette cheatsheet comme r\u00e9f\u00e9rence rapide pour vos projets Git.","title":"Autres Commandes Utiles"},{"location":"js/alpinejs/","text":"Cheatsheet Alpine.js Introduction Alpine.js est un framework JavaScript l\u00e9ger pour ajouter des fonctionnalit\u00e9s interactives \u00e0 vos pages web de mani\u00e8re d\u00e9clarative. Installation <script src=\"https://unpkg.com/alpinejs@3.x.x/dist/cdn.min.js\" defer></script> Directives de base x-data D\u00e9finit un objet de donn\u00e9es pour un composant. <div x-data=\"{ open: false }\"> <!-- Contenu du composant --> </div> x-bind Lie un attribut \u00e0 une expression. <button x-bind:disabled=\"!form.valid\">Envoyer</button> Raccourci : :disabled=\"!form.valid\" x-on Attache un \u00e9couteur d'\u00e9v\u00e9nement \u00e0 un \u00e9l\u00e9ment. <button x-on:click=\"open = true\">Ouvrir</button> Raccourci : @click=\"open = true\" x-text Met \u00e0 jour le contenu texte d'un \u00e9l\u00e9ment. <span x-text=\"message\"></span> x-html Met \u00e0 jour le contenu HTML d'un \u00e9l\u00e9ment. <div x-html=\"htmlContent\"></div> x-model Cr\u00e9e une liaison bidirectionnelle sur un \u00e9l\u00e9ment de formulaire. <input type=\"text\" x-model=\"name\" /> x-show Bascule la visibilit\u00e9 d'un \u00e9l\u00e9ment. <div x-show=\"isVisible\">Contenu visible</div> x-if Ajoute ou supprime un \u00e9l\u00e9ment du DOM. <template x-if=\"isLoggedIn\"> <nav><!-- Menu pour utilisateurs connect\u00e9s --></nav> </template> x-for It\u00e8re sur un tableau pour cr\u00e9er des \u00e9l\u00e9ments du DOM. <template x-for=\"item in items\"> <li x-text=\"item\"></li> </template> M\u00e9thodes magiques $refs Acc\u00e8de aux \u00e9l\u00e9ments DOM r\u00e9f\u00e9renc\u00e9s. <div x-ref=\"content\"></div> <button @click=\"$refs.content.innerHTML = 'Nouveau contenu'\">Modifier</button> $el Fait r\u00e9f\u00e9rence \u00e0 l'\u00e9l\u00e9ment DOM actuel. <button @click=\"$el.textContent = 'Cliqu\u00e9'\">Cliquez-moi</button> $watch Observe les changements d'une propri\u00e9t\u00e9. <div x-init=\"$watch('count', value => console.log(value))\"></div> $dispatch D\u00e9clenche un \u00e9v\u00e9nement personnalis\u00e9. <button @click=\"$dispatch('custom-event', { data: 'example' })\">Envoyer</button> Modificateurs d'\u00e9v\u00e9nements .prevent : \u00e9quivalent \u00e0 event.preventDefault() .stop : \u00e9quivalent \u00e0 event.stopPropagation() .outside : d\u00e9clenche le gestionnaire si l'\u00e9v\u00e9nement se produit en dehors de l'\u00e9l\u00e9ment .window : \u00e9coute l'\u00e9v\u00e9nement sur l'objet window .debounce : retarde l'ex\u00e9cution du gestionnaire Cycle de vie x-init Ex\u00e9cute des expressions lors de l'initialisation d'un composant. <div x-init=\"fetchData()\"> <!-- Contenu du composant --> </div> Plugins Alpine.js peut \u00eatre \u00e9tendu avec des plugins pour ajouter des fonctionnalit\u00e9s suppl\u00e9mentaires. Alpine.plugin(myPlugin); Conclusion Cette cheatsheet couvre les fonctionnalit\u00e9s principales d'Alpine.js. Pour une documentation plus d\u00e9taill\u00e9e et des exemples avanc\u00e9s, consultez la documentation officielle d'Alpine.js .","title":"AlpineJS"},{"location":"js/alpinejs/#cheatsheet-alpinejs","text":"","title":"Cheatsheet Alpine.js"},{"location":"js/alpinejs/#introduction","text":"Alpine.js est un framework JavaScript l\u00e9ger pour ajouter des fonctionnalit\u00e9s interactives \u00e0 vos pages web de mani\u00e8re d\u00e9clarative.","title":"Introduction"},{"location":"js/alpinejs/#installation","text":"<script src=\"https://unpkg.com/alpinejs@3.x.x/dist/cdn.min.js\" defer></script>","title":"Installation"},{"location":"js/alpinejs/#directives-de-base","text":"","title":"Directives de base"},{"location":"js/alpinejs/#x-data","text":"D\u00e9finit un objet de donn\u00e9es pour un composant. <div x-data=\"{ open: false }\"> <!-- Contenu du composant --> </div>","title":"x-data"},{"location":"js/alpinejs/#x-bind","text":"Lie un attribut \u00e0 une expression. <button x-bind:disabled=\"!form.valid\">Envoyer</button> Raccourci : :disabled=\"!form.valid\"","title":"x-bind"},{"location":"js/alpinejs/#x-on","text":"Attache un \u00e9couteur d'\u00e9v\u00e9nement \u00e0 un \u00e9l\u00e9ment. <button x-on:click=\"open = true\">Ouvrir</button> Raccourci : @click=\"open = true\"","title":"x-on"},{"location":"js/alpinejs/#x-text","text":"Met \u00e0 jour le contenu texte d'un \u00e9l\u00e9ment. <span x-text=\"message\"></span>","title":"x-text"},{"location":"js/alpinejs/#x-html","text":"Met \u00e0 jour le contenu HTML d'un \u00e9l\u00e9ment. <div x-html=\"htmlContent\"></div>","title":"x-html"},{"location":"js/alpinejs/#x-model","text":"Cr\u00e9e une liaison bidirectionnelle sur un \u00e9l\u00e9ment de formulaire. <input type=\"text\" x-model=\"name\" />","title":"x-model"},{"location":"js/alpinejs/#x-show","text":"Bascule la visibilit\u00e9 d'un \u00e9l\u00e9ment. <div x-show=\"isVisible\">Contenu visible</div>","title":"x-show"},{"location":"js/alpinejs/#x-if","text":"Ajoute ou supprime un \u00e9l\u00e9ment du DOM. <template x-if=\"isLoggedIn\"> <nav><!-- Menu pour utilisateurs connect\u00e9s --></nav> </template>","title":"x-if"},{"location":"js/alpinejs/#x-for","text":"It\u00e8re sur un tableau pour cr\u00e9er des \u00e9l\u00e9ments du DOM. <template x-for=\"item in items\"> <li x-text=\"item\"></li> </template>","title":"x-for"},{"location":"js/alpinejs/#methodes-magiques","text":"","title":"M\u00e9thodes magiques"},{"location":"js/alpinejs/#refs","text":"Acc\u00e8de aux \u00e9l\u00e9ments DOM r\u00e9f\u00e9renc\u00e9s. <div x-ref=\"content\"></div> <button @click=\"$refs.content.innerHTML = 'Nouveau contenu'\">Modifier</button>","title":"$refs"},{"location":"js/alpinejs/#el","text":"Fait r\u00e9f\u00e9rence \u00e0 l'\u00e9l\u00e9ment DOM actuel. <button @click=\"$el.textContent = 'Cliqu\u00e9'\">Cliquez-moi</button>","title":"$el"},{"location":"js/alpinejs/#watch","text":"Observe les changements d'une propri\u00e9t\u00e9. <div x-init=\"$watch('count', value => console.log(value))\"></div>","title":"$watch"},{"location":"js/alpinejs/#dispatch","text":"D\u00e9clenche un \u00e9v\u00e9nement personnalis\u00e9. <button @click=\"$dispatch('custom-event', { data: 'example' })\">Envoyer</button>","title":"$dispatch"},{"location":"js/alpinejs/#modificateurs-devenements","text":".prevent : \u00e9quivalent \u00e0 event.preventDefault() .stop : \u00e9quivalent \u00e0 event.stopPropagation() .outside : d\u00e9clenche le gestionnaire si l'\u00e9v\u00e9nement se produit en dehors de l'\u00e9l\u00e9ment .window : \u00e9coute l'\u00e9v\u00e9nement sur l'objet window .debounce : retarde l'ex\u00e9cution du gestionnaire","title":"Modificateurs d'\u00e9v\u00e9nements"},{"location":"js/alpinejs/#cycle-de-vie","text":"","title":"Cycle de vie"},{"location":"js/alpinejs/#x-init","text":"Ex\u00e9cute des expressions lors de l'initialisation d'un composant. <div x-init=\"fetchData()\"> <!-- Contenu du composant --> </div>","title":"x-init"},{"location":"js/alpinejs/#plugins","text":"Alpine.js peut \u00eatre \u00e9tendu avec des plugins pour ajouter des fonctionnalit\u00e9s suppl\u00e9mentaires. Alpine.plugin(myPlugin);","title":"Plugins"},{"location":"js/alpinejs/#conclusion","text":"Cette cheatsheet couvre les fonctionnalit\u00e9s principales d'Alpine.js. Pour une documentation plus d\u00e9taill\u00e9e et des exemples avanc\u00e9s, consultez la documentation officielle d'Alpine.js .","title":"Conclusion"},{"location":"js/vue3/","text":"Vue 3 Composition API Introduction Vue 3 introduit la Composition API, une nouvelle fa\u00e7on d'organiser et de structurer les composants. La Composition API permet de mieux r\u00e9utiliser la logique et offre plus de flexibilit\u00e9 par rapport \u00e0 l'API Options classique. Syntaxe de Base Composant Simple avec script setup <template> <div>{{ message }}</div> </template> <script setup> import { ref } from \"vue\"; const message = ref(\"Hello, Vue 3!\"); </script> Variables R\u00e9actives Utiliser ref pour cr\u00e9er une valeur r\u00e9active simple. import { ref } from \"vue\"; const count = ref(0); Utiliser reactive pour cr\u00e9er un objet r\u00e9actif. import { reactive } from \"vue\"; const state = reactive({ count: 0, name: \"Vincent\", }); Exposer des Variables \u00e0 Template Toutes les variables d\u00e9finies dans le bloc script setup sont automatiquement expos\u00e9es au template. <template> <div>{{ count }}</div> </template> <script setup> import { ref } from \"vue\"; const count = ref(0); </script> M\u00e9thodes et Fonctions D\u00e9finir des fonctions directement dans le bloc script setup . <template> <button @click=\"increment\">Increment</button> </template> <script setup> import { ref } from \"vue\"; const count = ref(0); function increment() { count.value++; } </script> Props Utiliser la directive defineProps pour d\u00e9clarer des props. <template> <div>{{ msg }}</div> </template> <script setup> const props = defineProps({ msg: String, }); </script> \u00c9v\u00e9nements Utiliser emit pour \u00e9mettre des \u00e9v\u00e9nements. <template> <button @click=\"emitEvent\">Click Me</button> </template> <script setup> const emit = defineEmits([\"myEvent\"]); function emitEvent() { emit(\"myEvent\", \"Hello World\"); } </script> Lifecycle Hooks Les hooks de cycle de vie peuvent \u00eatre utilis\u00e9s directement dans le bloc script setup . import { onMounted, onUnmounted } from \"vue\"; onMounted(() => { console.log(\"Component mounted\"); }); onUnmounted(() => { console.log(\"Component unmounted\"); }); Utilisation des Composants Importer un composant enfant dans un composant parent avec script setup . <template> <ChildComponent /> </template> <script setup> import ChildComponent from \"./ChildComponent.vue\"; </script> Requ\u00eates API Utiliser axios ou fetch pour les requ\u00eates API. <template> <div v-if=\"data\">{{ data }}</div> </template> <script setup> import { ref, onMounted } from \"vue\"; import axios from \"axios\"; const data = ref(null); onMounted(async () => { const response = await axios.get(\"https://api.example.com/data\"); data.value = response.data; }); </script> Exemples Avanc\u00e9s Usage de computed <template> <div>{{ doubled }}</div> </template> <script setup> import { ref, computed } from \"vue\"; const count = ref(2); const doubled = computed(() => count.value * 2); </script> Formulaires R\u00e9actifs <template> <form @submit.prevent=\"handleSubmit\"> <input v-model=\"form.name\" placeholder=\"Name\" /> <button type=\"submit\">Submit</button> </form> </template> <script setup> import { reactive } from \"vue\"; const form = reactive({ name: \"\", }); function handleSubmit() { console.log(form.name); } </script>","title":"Vue3 Composition Api"},{"location":"js/vue3/#vue-3-composition-api","text":"","title":"Vue 3 Composition API"},{"location":"js/vue3/#introduction","text":"Vue 3 introduit la Composition API, une nouvelle fa\u00e7on d'organiser et de structurer les composants. La Composition API permet de mieux r\u00e9utiliser la logique et offre plus de flexibilit\u00e9 par rapport \u00e0 l'API Options classique.","title":"Introduction"},{"location":"js/vue3/#syntaxe-de-base","text":"","title":"Syntaxe de Base"},{"location":"js/vue3/#composant-simple-avec-script-setup","text":"<template> <div>{{ message }}</div> </template> <script setup> import { ref } from \"vue\"; const message = ref(\"Hello, Vue 3!\"); </script>","title":"Composant Simple avec script setup"},{"location":"js/vue3/#variables-reactives","text":"Utiliser ref pour cr\u00e9er une valeur r\u00e9active simple. import { ref } from \"vue\"; const count = ref(0); Utiliser reactive pour cr\u00e9er un objet r\u00e9actif. import { reactive } from \"vue\"; const state = reactive({ count: 0, name: \"Vincent\", });","title":"Variables R\u00e9actives"},{"location":"js/vue3/#exposer-des-variables-a-template","text":"Toutes les variables d\u00e9finies dans le bloc script setup sont automatiquement expos\u00e9es au template. <template> <div>{{ count }}</div> </template> <script setup> import { ref } from \"vue\"; const count = ref(0); </script>","title":"Exposer des Variables \u00e0 Template"},{"location":"js/vue3/#methodes-et-fonctions","text":"D\u00e9finir des fonctions directement dans le bloc script setup . <template> <button @click=\"increment\">Increment</button> </template> <script setup> import { ref } from \"vue\"; const count = ref(0); function increment() { count.value++; } </script>","title":"M\u00e9thodes et Fonctions"},{"location":"js/vue3/#props","text":"Utiliser la directive defineProps pour d\u00e9clarer des props. <template> <div>{{ msg }}</div> </template> <script setup> const props = defineProps({ msg: String, }); </script>","title":"Props"},{"location":"js/vue3/#evenements","text":"Utiliser emit pour \u00e9mettre des \u00e9v\u00e9nements. <template> <button @click=\"emitEvent\">Click Me</button> </template> <script setup> const emit = defineEmits([\"myEvent\"]); function emitEvent() { emit(\"myEvent\", \"Hello World\"); } </script>","title":"\u00c9v\u00e9nements"},{"location":"js/vue3/#lifecycle-hooks","text":"Les hooks de cycle de vie peuvent \u00eatre utilis\u00e9s directement dans le bloc script setup . import { onMounted, onUnmounted } from \"vue\"; onMounted(() => { console.log(\"Component mounted\"); }); onUnmounted(() => { console.log(\"Component unmounted\"); });","title":"Lifecycle Hooks"},{"location":"js/vue3/#utilisation-des-composants","text":"Importer un composant enfant dans un composant parent avec script setup . <template> <ChildComponent /> </template> <script setup> import ChildComponent from \"./ChildComponent.vue\"; </script>","title":"Utilisation des Composants"},{"location":"js/vue3/#requetes-api","text":"Utiliser axios ou fetch pour les requ\u00eates API. <template> <div v-if=\"data\">{{ data }}</div> </template> <script setup> import { ref, onMounted } from \"vue\"; import axios from \"axios\"; const data = ref(null); onMounted(async () => { const response = await axios.get(\"https://api.example.com/data\"); data.value = response.data; }); </script>","title":"Requ\u00eates API"},{"location":"js/vue3/#exemples-avances","text":"","title":"Exemples Avanc\u00e9s"},{"location":"js/vue3/#usage-de-computed","text":"<template> <div>{{ doubled }}</div> </template> <script setup> import { ref, computed } from \"vue\"; const count = ref(2); const doubled = computed(() => count.value * 2); </script>","title":"Usage de computed"},{"location":"js/vue3/#formulaires-reactifs","text":"<template> <form @submit.prevent=\"handleSubmit\"> <input v-model=\"form.name\" placeholder=\"Name\" /> <button type=\"submit\">Submit</button> </form> </template> <script setup> import { reactive } from \"vue\"; const form = reactive({ name: \"\", }); function handleSubmit() { console.log(form.name); } </script>","title":"Formulaires R\u00e9actifs"}]}